一.选择题
1-5     CBCAA
6-10    BDBAD

二.填空题
1.  [1,2,3,1,2,3,1,2,3]
2.  count()
3.  '2'
4.  ,   :
5.  [0,2,4]
6.  [1,4,7]
7.  1   1
8.
    number[1:3]返回的值为            [2,3]
    number[-3,-1]返回的值为          [8,9]
    number[7:10]返回的值为           [8,9,10]
    number[-3, 0]返回的值为          []
    number[-3:]返回的值为            [8,9,10]
    number[0:]返回的值为             [1,2,3,4,5,6,7,8,9,10]
    number[:0]返回的值为             []
    number[:3]返回的值为             [1,2,3]
    number[:]返回的值为              [1,2,3,4,5,6,7,8,9,10]
    number[2:20]返回的值为           [3,4,5,6,7,8,9,10]
    number[0:10:3] 返回的值为        [1,4,7]
    number[2:6:3] 返回的值为         [3,6]
    number[10:0:-1] 返回的值为       [10,9,8,7,6,5,4,3,2]
    number[2:0:-1] 返回的值为        [3,2]

三.简答题
1.  b = a.strip()
2.  a[2] = 100
3.  整型(int),浮点型(float),字符型(str),bool,列表(list),元组(tuple),集合,字典(dict)
4.  int(),float(),str(),bool(),list()
5.  a=（1，）是元组类型     b=(1)是整型类型，c=("1")是字符类型
6.  match只从第一个元素查找,只找第一个符合条件的就结束,而search是查找所有符合条件的再结束
7.  with帮助用户读写后关闭文件
8.
    1.upper()全部大写
    2.lower()全部小写
    3.str()转换文字符串
    4.capitalize()首字母大写
    5.title()每个单词首字母大写
    6.strip()删除左右两边的空格
    7.replace("旧字符",""新字符)新字符替换旧字符
    8.find()从左往右查找符合条件的字符,找不到返回-1
    9.rfind()从右往左查找符合条件的字符,找不到返回-1
    10.swapcase()取反,原来大写变小写,小写变大写
    11.center()在一个字符宽度居中显示
    12.isupper()判断是否为大写
    13.islower()判断是否为小写
9.  列表[list]里面的值可以修改,而元组(tuple)里面的值只可以修改一次
10.
    1.  | , []      或者
    2.  {0,1} , ?   可有可无
    3.  + , {1,}    大于等于1
    4.  {0,}        大于等于0
    5.  {n,m}       n-m 之间
    6.  /d , [0-9]   数字
    7.  /D , [^0-9]  非数字
    8.  /s           字母数字下划线
    9.  /S           非字母数字下划线
    10. [a-z|A-Z]    全部大小写字母
    11. [^a-z|A-Z]   非大小写字母
    12. .            除换行外所有字符
    13. .+           也可以匹配换行
11.
    import re
    p = r'”我会(.+?), 你呢?”'
    a = re.findall(p,Text,re.S)
    print(a)
12.
    import random
    a = random.randint(1,200)
    print(a)
13. *args是不定长参数
14.
    with open (这是文件名,这是模式,这是编码格式)as 操作文件名字
    模式:
        1."r" 读模式,帮助用户读出文件
        2."w" 写模式,帮助用户写文件,会覆盖原有文件
        3."a" 追加模式,帮助用户,写文件,但不会覆盖原有文件
        4."r+"可以读的时候也可写入,主读模式
        5."w+"可以写的时候也可读取,主写模式
        6."a+"同a,可以读取
        7."rb" 读模式,读取二进制
        8."wb" 写模式,写二进制,主要保存文件,例如:音乐,图片,视频等,会覆盖原有文件
        9."ab" 追加模式,写二进制数据,但不会覆盖原有文件
15.1
    a = 10
    print("改变之前函数外a=%s"%(a))
    def g():
        global a
        a = 3
        print("函数内a=%s"%(a))
    g()
    print("改变之后函数外a=%s"%(a))
15.2
    1.  (.+)这是贪婪模式,只要符合就匹配
    2.  (.+?)这是非贪婪模式,第一个符合就匹配
16.
    1.列表末尾追加元素  list.append(元素) 或者list.extend([元素])
    指定位置添加元素    list.insert(index,元素)
    指定位置修改元素    list[index] = 元素
    指定位置删除元素    list.pop[index]
17.
    break 退出循环,不执行循环
    continue 只退出一次循环,继续执行循环
18. a,b = 20,10
19.
    1.元组里的元素只可以修改一次,列表,字典里的元素可多次修改;
    2.字典在遍历的时候不可以删除元素,列表可以;
20. b = [j for i in a for j in i]